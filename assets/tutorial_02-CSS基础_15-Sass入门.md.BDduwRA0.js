import{_ as a,D as p,c as i,I as n,a4 as e,o as t}from"./chunks/framework.B2xMVIVo.js";const b=JSON.parse('{"title":"15-Sass入门","description":"","frontmatter":{"title":"15-Sass入门","publish":true},"headers":[],"relativePath":"tutorial/02-CSS基础/15-Sass入门.md","filePath":"tutorial/02-CSS基础/15-Sass入门.md","lastUpdated":1718865103000}'),l={name:"tutorial/02-CSS基础/15-Sass入门.md"},c=e(`<h1 id="_15-sass-入门" tabindex="-1">15-Sass 入门 <a class="header-anchor" href="#_15-sass-入门" aria-label="Permalink to &quot;15-Sass 入门&quot;">​</a></h1><h2 id="sass-简介" tabindex="-1">Sass 简介 <a class="header-anchor" href="#sass-简介" aria-label="Permalink to &quot;Sass 简介&quot;">​</a></h2><p>大家都知道，js 中可以自定义变量，css 仅仅是一个标记语言，不是编程语言，因此不可以自定义变量、不可以引用等等。</p><p>面对这些问题，我们现在来引入 Sass，简单的说，他是 css 的升级版，可以自定义变量，可以有 if 语句，还可以嵌套等等，很神奇吧！那下面我们就来介绍返个神奇的 Sass。</p><p>Sass 比 Less 的功能更强大，也更复杂。</p><h3 id="sass-的定义" tabindex="-1">Sass 的定义 <a class="header-anchor" href="#sass-的定义" aria-label="Permalink to &quot;Sass 的定义&quot;">​</a></h3><p>Sass：英文是 Syntactically Awesome Stylesheets Sass。最早由 Hampton Catlin 开发和设计。 一种帮助你简化 CSS 工作流程的方式，帮助你更容易维护和开发 CSS 内容。</p><p>官网是：<a href="https://sass-lang.com/" target="_blank" rel="noreferrer">https://sass-lang.com/</a></p><p>Sass 是这个世界上最成熟、稳定和强大的专业级 CSS 扩展语言。</p><p>Sass 专注的是怎样创建优雅的样式表，而不是内容。</p><h3 id="sass、compass-与-css" tabindex="-1">Sass、Compass 与 CSS <a class="header-anchor" href="#sass、compass-与-css" aria-label="Permalink to &quot;Sass、Compass 与 CSS&quot;">​</a></h3><p><strong>关系：</strong></p><ul><li>Less/Sass 是语法、Compass 是框架、CSS 是目标。</li></ul><p><strong>Sass&amp;Compass 的好处</strong>：</p><ul><li><p>写出更优秀的 CSS。</p></li><li><p>解决 CSS 编写过程中的痛点问题，比如精灵图合图、属性的浏览器前缀处理等。</p></li><li><p>有效组织样式、图片、字体等项目元素。</p></li></ul><p><strong>受众群体：</strong></p><ul><li><p>重构的同学，写很多 CSS，不知如何自动化。</p></li><li><p>希望在项目周期内更好地组织项目内容。</p></li></ul><h2 id="sass-的安装" tabindex="-1">Sass 的安装 <a class="header-anchor" href="#sass-的安装" aria-label="Permalink to &quot;Sass 的安装&quot;">​</a></h2><p>sass 引擎是用 Ruby 语言开发的（但是两者的语法没有关系），因此在安装 Sass 前，需要先安装 Ruby（mac 下自带 Ruby 无需再安装 Ruby）。</p><p>下面来讲一下 Windows 下的安装 Sass 的步骤。</p><h3 id="第一步-安装-ruby-windows-环境" tabindex="-1">第一步：安装 Ruby（windows 环境） <a class="header-anchor" href="#第一步-安装-ruby-windows-环境" aria-label="Permalink to &quot;第一步：安装 Ruby（windows 环境）&quot;">​</a></h3><p>下载地址：<a href="http://rubyinstaller.org/downloads/" target="_blank" rel="noreferrer">http://rubyinstaller.org/downloads/</a></p><p>貌似网络很慢，不一定能下载成功~</p><p>安装时，记得勾选“环境变量”：</p><p><img src="http://img.smyhvae.com/20180407_2022.png" alt="" loading="lazy"></p><p>安装完 ruby 之后，在命令行中输入<code>ruby -v</code>，查看 ruby 的的版本：</p><p><img src="http://img.smyhvae.com/20180407_2039.png" alt="" loading="lazy"></p><h3 id="关于-mac-下的-ruby" tabindex="-1">关于 Mac 下的 Ruby <a class="header-anchor" href="#关于-mac-下的-ruby" aria-label="Permalink to &quot;关于 Mac 下的 Ruby&quot;">​</a></h3><p>刚刚说了，Mac 下自带 Ruby，但是版本肯定很老：</p><p><img src="http://img.smyhvae.com/20180407_2145.png" alt="" loading="lazy"></p><p>有的时候，我们可能需要使用特定版本的 ruby，或者在不同的 ruby 版本之间进行切换，所以，大家可以尝试安装<code>rvm</code>，它是 ruby 的版本管理工具。官网是：<a href="https://rvm.io" target="_blank" rel="noreferrer">https://rvm.io</a></p><h3 id="第二步-安装-sass" tabindex="-1">第二步：安装 Sass <a class="header-anchor" href="#第二步-安装-sass" aria-label="Permalink to &quot;第二步：安装 Sass&quot;">​</a></h3><p>安装完 ruby 之后，在开始菜单中，找到刚才我们安装的 ruby，打开 Start Command Prompt with Ruby。输入<code>gem install sass</code>安装 Sass。</p><p>PS：Ruby 是使用 gem 来管理它的各种包（比如 Sass）。我们安装好 ruby 之后，gem 会自动安装上；类似于，我们安装完 node 之后，npm 也自动安装好了。</p><p>但是，由于访问网络受限，我们可以先切换到淘宝的镜像，再安装 Sass。步骤如下：</p><p>（1）移除默认的镜像，添加淘宝的镜像：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>	gem sources --remove https://rubygems.org/</span></span>
<span class="line"><span></span></span>
<span class="line"><span>	gem sources -a https://ruby.taobao.org/  //注意：如果你系统不支持https，请将淘宝源更换成：gem sources -a http://gems.ruby-china.org</span></span></code></pre></div><p>PS：我测试了一下，Win 7 不支持 https，Mac 支持 https。</p><p>（2）查看当前使用的是哪个镜像：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>	gem sources -l</span></span></code></pre></div><p><img src="http://img.smyhvae.com/20180407_2050.png" alt="" loading="lazy"></p><p>（3）安装 sass：</p><p>紧接着，输入如下命令安装 Sass：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>	gem install sass        // 如果mac下输入这个命令时没有权限，则需要在前面加上 sudo</span></span></code></pre></div><p>系统会自动安装上最新版本的 Sass。</p><p>查看 sass 版本的命令为:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>	sass -v</span></span></code></pre></div><p>升级 sass 版本的命令为：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>	gem update sass</span></span></code></pre></div><p>你也可以运行帮助命令行来查看你需要的命令：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>	sass -h</span></span></code></pre></div><p><img src="http://img.smyhvae.com/20180407_2100.png" alt="" loading="lazy"></p><p>参考链接：<a href="https://www.w3cplus.com/sassguide/install.html" target="_blank" rel="noreferrer">https://www.w3cplus.com/sassguide/install.html</a></p><h2 id="compass-简介和安装" tabindex="-1">Compass 简介和安装 <a class="header-anchor" href="#compass-简介和安装" aria-label="Permalink to &quot;Compass 简介和安装&quot;">​</a></h2><p>安装完 sass 之后，我们在 main.scss 中写一些代码，然后输入如下命令，就可以将<code>scss文件</code>转化为<code>css文件</code>：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>	sass main.scss main.css</span></span></code></pre></div><p>然而，真正的项目开发中，我们不一定是直接使用 sass 命令，而是使用 Compass。</p><h3 id="compass-简介" tabindex="-1">Compass 简介 <a class="header-anchor" href="#compass-简介" aria-label="Permalink to &quot;Compass 简介&quot;">​</a></h3><p>官网是：<a href="http://compass-style.org/" target="_blank" rel="noreferrer">http://compass-style.org/</a>。</p><p>Compass 是开源的 CSS 书写框架。</p><h3 id="compass-安装" tabindex="-1">Compass 安装 <a class="header-anchor" href="#compass-安装" aria-label="Permalink to &quot;Compass 安装&quot;">​</a></h3><p>输入如下命令安装 Compass：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>	gem isntall compass</span></span></code></pre></div><p>输入如下命令查看版本：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>	compass -v</span></span></code></pre></div><p><img src="http://img.smyhvae.com/20180407_2208.png" alt="" loading="lazy"></p><p>compass 可以直接用来搭建前端项目的样式部分，但并不是常用的方法。</p><h3 id="compass-的简单使用" tabindex="-1">Compass 的简单使用 <a class="header-anchor" href="#compass-的简单使用" aria-label="Permalink to &quot;Compass 的简单使用&quot;">​</a></h3><p>通过 Compass 创建工程目录：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>cd workspace</span></span>
<span class="line"><span></span></span>
<span class="line"><span>compass create CompassDemo</span></span></code></pre></div><p>文件结构如下：</p><ul><li><p>/sass</p><ul><li>ie.scss</li><li>print.scss</li><li>screen.scss</li></ul></li><li><p>/stylesheets</p><ul><li>ie.css</li><li>print.css</li><li>screen.css</li></ul></li><li><p>config.rb</p></li></ul><p>为了能够让文件实时编译，我们可以通过 copass watch 监听 sass 文件的变化：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>	cd CompassDemo</span></span>
<span class="line"><span></span></span>
<span class="line"><span>	compass watch</span></span></code></pre></div><p>当.scss 文件改动时，会自动生成对应的.css 文件。</p><h2 id="sass-的语法" tabindex="-1">Sass 的语法 <a class="header-anchor" href="#sass-的语法" aria-label="Permalink to &quot;Sass 的语法&quot;">​</a></h2><h3 id="两种后缀名-两种语法" tabindex="-1">两种后缀名（两种语法） <a class="header-anchor" href="#两种后缀名-两种语法" aria-label="Permalink to &quot;两种后缀名（两种语法）&quot;">​</a></h3><p>sass 有两种后缀名文件：</p><p>（1）<code>.sass</code>：对空格敏感。不使用大括号和分号，所以每个属性之间是通过换行来分隔。</p><p>比如：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>h1</span></span>
<span class="line"><span>	color: #000</span></span>
<span class="line"><span>	background: #fff</span></span></code></pre></div><p>这种语法是类 ruby 的语法，和 CSS 的语法相比，相差较大。所以，在 3.0 版本中就引入了<code>.scss</code>的语法。</p><p>（2）<code>.scss</code>：是 css 语法的超集，可以使用大括号和分号。</p><p>比如：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>h1 {</span></span>
<span class="line"><span>	color: #000;</span></span>
<span class="line"><span>	background: #fff;</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>注意：一个项目中可以混合使用两种语法，但是一个文件中不能同时使用两种语法。</p><p><strong>两种格式之间的转换：</strong></p><p>我们在工程目录下新建<code>main.scss</code>，输入如下代码：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>*{</span></span>
<span class="line"><span>    margin: 0;</span></span>
<span class="line"><span>    padding: 0;</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>然后输入如下命令，就可以将上面的<code>main.scss</code>转化为<code>main.sass</code>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	sass-convert</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main.scss</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main.sass</span></span></code></pre></div><p>打开生成的<code>main.sass</code>，内容如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>*</span></span>
<span class="line"><span>  margin: 0</span></span>
<span class="line"><span>  padding: 0</span></span></code></pre></div><h3 id="变量语法" tabindex="-1">变量语法 <a class="header-anchor" href="#变量语法" aria-label="Permalink to &quot;变量语法&quot;">​</a></h3><p>Sass 是通过<code>$</code>符号来声明变量。</p><p>（1）我们新建一个文件<code>_variables.scss</code>，这个文件专门用来存放变量，然后在其他的文件中引入<code>_variables.scss</code>即可。</p><p>因为这个文件只需要存储变量，并不需要它编译出对应的 css 文件，所以我们给文件名的前面加了<strong>下划线</strong>，意思是声明为<strong>局部文件</strong>。</p><p>我们在这个文件中，声明两个字体变量：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$font1: Braggadocio, Arial, Verdana, Helvetica, </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">sans-serif</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$font2: Arial, Verdana, Helvetica, </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">sans-serif</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>（2）新建文件 main.scss，在里面引入步骤（1）中的变量文件：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>@import &quot;variables&quot;;    // 引入变量文件</span></span>
<span class="line"><span></span></span>
<span class="line"><span>.div1{</span></span>
<span class="line"><span>    font-family: $font1;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>.div2{</span></span>
<span class="line"><span>    font-family: $font2;</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>基于 Sass 的既定规则：</p><ul><li><p>没有文件后缀名时，Sass 会自动添加 .scss 或者 .sass 的后缀（具体要看已经存在哪个后缀的文件）。</p></li><li><p>同一目录下，局部文件和非局部文件不能重名。</p></li></ul><p>对应生成的 main.css 文件如下：</p><p>main.css</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* line 9, ../sass/main.scss */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.div1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  font-family</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: Braggadocio, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Arial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Verdana</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Helvetica</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sans-serif</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* line 13, ../sass/main.scss */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.div2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  font-family</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Arial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Verdana</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Helvetica</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sans-serif</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="注释语法" tabindex="-1">注释语法 <a class="header-anchor" href="#注释语法" aria-label="Permalink to &quot;注释语法&quot;">​</a></h3><p>单行注释：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>//我是单行注释</span></span></code></pre></div><p>块级注释：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>/*</span></span>
<span class="line"><span>	我是块级注释</span></span>
<span class="line"><span>	哈哈</span></span>
<span class="line"><span>*/</span></span></code></pre></div><p>二者的区别是：单行注释不会出现在自动生成的 css 文件中。</p>`,112),m=a(l,[["render",function(o,h,d,r,g,u){const s=p("ArticleTopAd");return t(),i("div",null,[n(s),c])}]]);export{b as __pageData,m as default};
