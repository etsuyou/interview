import{_ as i,D as t,c as s,I as e,a4 as l,o as n}from"./chunks/framework.B2xMVIVo.js";const b=JSON.parse('{"title":"04-解决 Git 不区分大小写导致的文件冲突问题","description":"","frontmatter":{"title":"04-解决 Git 不区分大小写导致的文件冲突问题"},"headers":[],"relativePath":"tutorial/00-前端工具/04-解决 Git 不区分大小写导致的文件冲突问题.md","filePath":"tutorial/00-前端工具/04-解决 Git 不区分大小写导致的文件冲突问题.md","lastUpdated":1718865103000}'),r={name:"tutorial/00-前端工具/04-解决 Git 不区分大小写导致的文件冲突问题.md"},h=l(`<h1 id="_04-解决-git-不区分大小写导致的文件冲突问题" tabindex="-1">04-解决 Git 不区分大小写导致的文件冲突问题 <a class="header-anchor" href="#_04-解决-git-不区分大小写导致的文件冲突问题" aria-label="Permalink to &quot;04-解决 Git 不区分大小写导致的文件冲突问题&quot;">​</a></h1><h2 id="解决-git-不区分大小写导致的文件冲突问题" tabindex="-1">解决 Git 不区分大小写导致的文件冲突问题 <a class="header-anchor" href="#解决-git-不区分大小写导致的文件冲突问题" aria-label="Permalink to &quot;解决 Git 不区分大小写导致的文件冲突问题&quot;">​</a></h2><ul><li><p>文章发布时间：2022-02-17</p></li><li><p>作者：@千古壹号</p></li></ul><p>有些同学在 Git 仓库对文件/文件夹进行命名时，刚开始是小写，后来为了保持团队一致，又改成了大写，然而 Git 不会发现大小写的变化，此时就出了问题：导致仓库里出现了 大小写 同时存在的两个文件。但在 Windows、Mac 的电脑磁盘里，肉眼却能只看到一个文件，实在奇葩。</p><p>这个问题的根本原因是，Windows、Mac 的<strong>文件系统</strong>不区分大小写。</p><p>Linux 的文件系统是区分大小写的。Git 默认是不区分大小写的，也可以通过改配置项，改为区分大小写。</p><h3 id="问题复现路径" tabindex="-1">问题复现路径 <a class="header-anchor" href="#问题复现路径" aria-label="Permalink to &quot;问题复现路径&quot;">​</a></h3><p>（1）新建一个 test 文件(大小写不敏感的状态下)，并提交。</p><p>（2）本地修改 test 变为 Test，文件内容无变更，无法提交。</p><p>（3）执行 <code>git config core.ignorecase false</code>，设 置 Git 的规则为 区分大小写（大小写敏感），然后 git push 提交，查看结果，此时远程仓库会存在 大小写 同时存在的文件，但本地仓库却只看到其中一个文件。</p><p>（4）甚至可能出现这种异常情况：本地暂存区的文件，怎么删也删不掉。再之后，从 test 尝试改为 Test 时，提示命名冲突。</p><h3 id="错误的解决办法" tabindex="-1">错误的解决办法 <a class="header-anchor" href="#错误的解决办法" aria-label="Permalink to &quot;错误的解决办法&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Test</span></span></code></pre></div><p>执行上面的命令时，会报错：<code>fatal: renaming &#39;Test&#39; failed: Invalid argument</code></p><h3 id="正确的解决办法" tabindex="-1">正确的解决办法 <a class="header-anchor" href="#正确的解决办法" aria-label="Permalink to &quot;正确的解决办法&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 将本地的 test、Test 目录都删掉，并生成一个新的目录 Temp</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Temp</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 将 Temp 目录改成 Test 目录。此时，项目中只会存在 Test 目录，不会存在 test 目录。目标达成。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Temp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Test</span></span></code></pre></div><p>执行完上面的两个命令之后，项目中只会存在 Test 目录，不会存在 test 目录。目标达成。</p><h3 id="关于-是否区分大小写-的补充说明" tabindex="-1">关于 是否区分大小写 的补充说明 <a class="header-anchor" href="#关于-是否区分大小写-的补充说明" aria-label="Permalink to &quot;关于 是否区分大小写 的补充说明&quot;">​</a></h3><p>我们知道：针对文件/文件夹，Windows 系统和 Mac 系统是不区分大小写的；Linux 系统是区分大小写的；Git 默认是不区分大小写的，也可以通过改配置项，改为区分大小写。</p><p>不分区大小写，也有它的好处，比如：文件夹/文件的路径，很多时候就代表了网站地址、页面 url 的路径。而<strong>网站地址也是不区分大小写的</strong>，这是很关键的原因之一。</p><p>总的来说，根本原因是文件系统、url 在底层设计上不区分大小写。磁盘路径、页面地址，本质上都是 url 。</p><h3 id="关于-git-是否区分大小写-的补充" tabindex="-1">关于 Git 是否区分大小写 的补充 <a class="header-anchor" href="#关于-git-是否区分大小写-的补充" aria-label="Permalink to &quot;关于 Git 是否区分大小写 的补充&quot;">​</a></h3><p>前面讲到，Git 默认是不区分大小写的，可以通过命令<code>git config --get core.ignorecase</code>查到，默认值是 true。</p><p>我们也可以修改 Git 的这一配置项，改为区分大小写，配置命令为<code>git config core.ignorecase false</code>。</p><p>但我建议你<strong>保留 Git 的默认配置项</strong>，不要随意自行修改，避免产生其他的麻烦。</p><h3 id="参考链接" tabindex="-1">参考链接 <a class="header-anchor" href="#参考链接" aria-label="Permalink to &quot;参考链接&quot;">​</a></h3><ul><li><p><a href="https://shanyue.tech/bug/mac-git-ignorecase.html" target="_blank" rel="noreferrer">Mac 中 git 大小写问题的解决方案</a></p></li><li><p><a href="https://blog.csdn.net/u013707249/article/details/79135639" target="_blank" rel="noreferrer">git 大小写问题 踩坑笔记</a></p></li></ul>`,27),F=i(r,[["render",function(p,o,d,c,g,k){const a=t("ArticleTopAd");return n(),s("div",null,[e(a),h])}]]);export{b as __pageData,F as default};
