import{_ as l,D as s,c as i,I as e,a4 as t,o}from"./chunks/framework.B2xMVIVo.js";const q=JSON.parse('{"title":"00-准备","description":"","frontmatter":{"title":"00-准备","publish":true},"headers":[],"relativePath":"tutorial/03-CSS进阶/00-准备.md","filePath":"tutorial/03-CSS进阶/00-准备.md","lastUpdated":1718865103000}'),r={name:"tutorial/03-CSS进阶/00-准备.md"},p=t('<h1 id="_00-准备" tabindex="-1">00-准备 <a class="header-anchor" href="#_00-准备" aria-label="Permalink to &quot;00-准备&quot;">​</a></h1><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p>css 进阶的主要内容如下。</p><h3 id="_1、css-非布局样式" tabindex="-1">1、css 非布局样式 <a class="header-anchor" href="#_1、css-非布局样式" aria-label="Permalink to &quot;1、css 非布局样式&quot;">​</a></h3><ul><li><p>html 元素的分类和特性</p></li><li><p>css 选择器</p></li><li><p>css 常见属性（非布局样式）</p></li></ul><h3 id="_2、css-布局相关" tabindex="-1">2、css 布局相关 <a class="header-anchor" href="#_2、css-布局相关" aria-label="Permalink to &quot;2、css 布局相关&quot;">​</a></h3><ul><li><p>css 布局属性和组合解析</p></li><li><p>常见布局方案</p></li><li><p>三栏布局案例</p></li></ul><h3 id="_3、动画和效果" tabindex="-1">3、动画和效果 <a class="header-anchor" href="#_3、动画和效果" aria-label="Permalink to &quot;3、动画和效果&quot;">​</a></h3><blockquote><p>属于 css 中最出彩的内容。</p></blockquote><ul><li><p>多背景多投影特效</p></li><li><p>3D 特效编写实践</p></li><li><p>过渡动画和关键帧动画实践</p></li><li><p>动画细节和原理深入解析</p></li></ul><h3 id="_4、框架集成和-css-工程化" tabindex="-1">4、框架集成和 css 工程化 <a class="header-anchor" href="#_4、框架集成和-css-工程化" aria-label="Permalink to &quot;4、框架集成和 css 工程化&quot;">​</a></h3><ul><li><p>预处理器作用和原理</p></li><li><p>less/sass 代码实践</p></li><li><p>Bootstrap 原理和用法</p></li><li><p>css 工程化的的实践方式</p></li><li><p>js 框架中的 css 集成实践</p></li></ul><h2 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h2><blockquote><p>不会 css 的前端称之为伪前端。</p></blockquote><h3 id="vue-中模拟-scoped-css-的方式" tabindex="-1">Vue 中模拟 Scoped CSS 的方式 <a class="header-anchor" href="#vue-中模拟-scoped-css-的方式" aria-label="Permalink to &quot;Vue 中模拟 Scoped CSS 的方式&quot;">​</a></h3><p>方案一：随机选择器。css modules。</p><p>方案二：<strong>随机属性</strong>。<code>&lt;div abcd&gt;</code>、<code>div[adcd]{}</code></p><h3 id="其他问题" tabindex="-1">其他问题 <a class="header-anchor" href="#其他问题" aria-label="Permalink to &quot;其他问题&quot;">​</a></h3><ul><li><p>html 元素的嵌套关系是怎么确定的？哪些嵌套不可以发生？</p></li><li><p>比如说，为什么 div 可以放在 a 标签里面？</p></li><li><p>css 选择器的权重是如何计算的？写代码时要注意什么？</p></li><li><p>浮动布局是怎么回事？有什么优缺点？国内用的多吗？</p></li><li><p>css 可否做逐帧动画吗？性能如何？</p></li><li><p>Bootstrap 怎么做响应式布局？</p></li><li><p>如何解决 css 模块化过程中的选择器互相干扰的问题？</p></li></ul><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>单独看 css 属性并不难，难的是需要把这些思路和思想，想到它的应用场景。</p>',21),m=l(r,[["render",function(c,d,h,u,n,b){const a=s("ArticleTopAd");return o(),i("div",null,[e(a),p])}]]);export{q as __pageData,m as default};
